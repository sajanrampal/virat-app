{"version":3,"sources":["./apps/virat-frontend-app/src/app/dashboard/pages/task/task.service.ts","./apps/virat-frontend-app/src/app/dashboard/pages/task/task.component.ts","./apps/virat-frontend-app/src/app/dashboard/pages/task/task.component.html","./apps/virat-frontend-app/src/app/dashboard/pages/task/task.module.ts"],"names":[],"mappings":"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","file":"pages-task-task-module.js","sourcesContent":["/* eslint-disable @nrwl/nx/enforce-module-boundaries */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'apps/virat-frontend-app/src/environments/environment';\r\n@Injectable()\r\nexport class TaskService {\r\n  constructor(private readonly httpClient: HttpClient) { }\r\n\r\n  getTask(id):any{\r\n   return this.httpClient.get(`${environment.apiBase}todos/${id}`)\r\n  }\r\n\r\n  saveTask(task){\r\n    return this.httpClient.post(`${environment.apiBase}todos`,task)\r\n  }\r\n\r\n  UpdateTask(task, taskId){\r\n    return this.httpClient.put(`${environment.apiBase}todos/${taskId}`,task)\r\n  }\r\n\r\n\r\n  \r\n}\r\n","/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport {Component, OnInit} from '@angular/core'\r\nimport {TaskService} from './task.service'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n    selector: 'virat-app-task',\r\n    templateUrl: './task.component.html',\r\n    styleUrls: ['./task.component.scss'],\r\n    providers:[TaskService,ToastrService]\r\n  })\r\nexport class TaskComponent implements OnInit{\r\n    task: FormGroup;\r\n    editiableTask:any;\r\n    taskEditableId:string;\r\n    isEditedTask:boolean= false;\r\n    dataSaving:boolean = false;\r\n    constructor(private readonly router: Router,\r\n        private readonly toastr: ToastrService,\r\n        private readonly fb: FormBuilder,\r\n        private readonly route: ActivatedRoute,\r\n        private readonly taskService: TaskService){\r\n            this.route.queryParamMap.subscribe(params => {\r\n                if(params.get('id')){\r\n                    this.taskEditableId = params.get('id')\r\n                    this.taskService.getTask(params.get('id')).subscribe(res=>{\r\n                        this.isEditedTask = true;                        \r\n                        this.editiableTask = res;\r\n                        this.task.get('taskName').setValue(this.editiableTask.payload.todo.taskName);\r\n                        this.task.get('assignedTo').setValue(this.editiableTask.payload.todo.assignedTo);\r\n                        if(this.editiableTask.payload.todo.status == 1){\r\n                            this.task.get('status').setValue(true);    \r\n                        }else{\r\n                            this.task.get('status').setValue(false);    \r\n                        }\r\n                    })\r\n                }\r\n                \r\n              });\r\n        }\r\n\r\n    ngOnInit(){\r\n        this.task = this.fb.group({\r\n            taskName: ['', [Validators.required]],\r\n            assignedTo: ['', [Validators.required]],\r\n            status: [0]\r\n          });\r\n    }\r\n\r\n    saveTask(){\r\n        if(this.task.valid){\r\n            this.dataSaving = true\r\n            if(this.task.value.status){\r\n                this.task.get('status').setValue(1);\r\n            }else{\r\n                this.task.get('status').setValue(0);\r\n\r\n            }\r\n            if(!this.isEditedTask){\r\n                this.taskService.saveTask(this.task.value).subscribe(res=>{\r\n                    console.log(res)\r\n                    this.showSaveToaster()\r\n                    this.dataSaving = false\r\n                    this.router.navigate(['/dashboard', 'tasks']);\r\n                })\r\n            }else{\r\n                this.taskService.UpdateTask(this.task.value, this.taskEditableId).subscribe(res=>{\r\n                    console.log(res)\r\n                    this.showUpdateToaster()\r\n                    this.dataSaving = false\r\n                    this.router.navigate(['/dashboard', 'tasks']);\r\n                })\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    showSaveToaster(){\r\n        this.toastr.success('Task has been successful saved!')\r\n    }\r\n\r\n    showUpdateToaster(){\r\n        this.toastr.success('Task has been successful updated!')\r\n    }\r\n\r\n \r\n}","\r\n<form class=\"task-form\" [formGroup]=\"task\">\r\n  <div class=\"form-group\">\r\n    <!-- <label for=\"exampleInputEmail1\">Task Name</label> -->\r\n    <input type=\"text\" class=\"form-control\" formControlName=\"taskName\" aria-describedby=\"emailHelp\" placeholder=\"Enter Task Name\">\r\n    <span class=\"error-msg\" *ngIf=\"task.get('taskName').touched && task.get('taskName').invalid\">* Please enter task name</span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <!-- <label for=\"exampleInputPassword1\">Assigned to/Student Id</label> -->\r\n    <input type=\"text\" class=\"form-control\" formControlName=\"assignedTo\" placeholder=\"Assigned to/Student Id\">\r\n    <span class=\"error-msg\" *ngIf=\"task.get('assignedTo').touched && task.get('assignedTo').invalid\">* Please enter assigned to/student id</span>\r\n\r\n  </div>\r\n  <div class=\"form-group form-check\">\r\n    <label for=\"exampleInputPassword1\">Completed</label>\r\n    <label class=\"switch\">\r\n      <input type=\"checkbox\" checked formControlName=\"status\">\r\n      <span class=\"slider round\"></span>\r\n    </label>\r\n  </div>\r\n  <button class=\"btn btn-primary\" (click)=\"saveTask()\" [disabled]=\"task.invalid || dataSaving\">Create Task</button>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { TaskComponent } from './task.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n\r\n@NgModule({\r\n  declarations: [TaskComponent],\r\n  imports: [CommonModule,HttpClientModule,FormsModule,\r\n    ReactiveFormsModule,ToastrModule.forRoot(),\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: TaskComponent,\r\n        }\r\n    ]),\r\n  ],\r\n})\r\nexport class TaskModule {}\r\n"],"sourceRoot":"webpack:///"}