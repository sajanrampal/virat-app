{"version":3,"sources":["./apps/virat-frontend-app/src/app/dashboard/pages/tasks/tasks.module.ts","./apps/virat-frontend-app/src/app/dashboard/pages/tasks/tasks.service.ts","./apps/virat-frontend-app/src/app/dashboard/pages/tasks/tasks.component.ts","./apps/virat-frontend-app/src/app/dashboard/pages/tasks/tasks.component.html"],"names":[],"mappings":"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","file":"pages-tasks-tasks-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { TasksComponent } from './tasks.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [TasksComponent],\r\n  imports: [CommonModule,HttpClientModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: TasksComponent,\r\n        }\r\n    ]),\r\n  ],\r\n})\r\nexport class TasksModule {}\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\n/* eslint-disable @nrwl/nx/enforce-module-boundaries */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'apps/virat-frontend-app/src/environments/environment';\r\n@Injectable()\r\nexport class TasksService {\r\n  constructor(private readonly httpClient: HttpClient) { }\r\n\r\n  getTasks(){\r\n   return this.httpClient.get(`${environment.apiBase}todos`)\r\n  }\r\n\r\n  \r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport {Component, OnInit} from '@angular/core'\r\nimport { Router } from '@angular/router';\r\nimport {TasksService} from './tasks.service'\r\n@Component({\r\n    selector: 'virat-app-tasks',\r\n    templateUrl: './tasks.component.html',\r\n    styleUrls: ['./tasks.component.scss'],\r\n    providers:[TasksService]\r\n  })\r\nexport class TasksComponent implements OnInit{\r\n    loading = true;\r\n    dammyTasks=[{\r\n        taskName:'Task 1',\r\n        assigned:'sajan',\r\n        status:'pending'\r\n\r\n    },{\r\n        taskName:'Task 2',\r\n        assigned:'sahil',\r\n        status:'completed'\r\n\r\n    },{\r\n        taskName:'Task 3',\r\n        assigned:'mohit',\r\n        status:'pending'\r\n\r\n    },{\r\n        taskName:'Task 4',\r\n        assigned:'virat',\r\n        status:'Completed'\r\n\r\n    }\r\n\r\n    ]\r\n    tasks:any= [];\r\n    constructor(private readonly router: Router,\r\n        private readonly tasksService:TasksService,\r\n        ){}\r\n\r\n    ngOnInit(){\r\n        this.tasksService.getTasks().subscribe(res=>{\r\n            this.loading = false;\r\n            this.tasks = res;\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    goToTasks(task){\r\n        this.router.navigate(['/dashboard', 'task'],  {\r\n            queryParams: {\r\n              id: task._id\r\n            }\r\n          });\r\n    }\r\n\r\n \r\n}"," <!-- Skeleton screen -->\r\n <!-- <div class=\"skeleton-screen\" *ngFor=\"let pictureGuide of loading?[1,2,3,4]:[]\">\r\n    <div class=\"text-line\"></div>\r\n</div> -->\r\n\r\n\r\n\r\n<ul class=\"list-group\">\r\n  <!-- <li class=\"list-group-item\" *ngFor=\"let task of tasks.payload.users; let i = index\">{{i+1}}---{{task._id}}\r\n    <button class=\"btn btn-success\" (click)=\"goToTasks()\">Edit</button>\r\n  </li> -->\r\n  <li class=\"skeleton-screen list-group-item\" *ngFor=\"let pictureGuide of loading?[1,2,3,4]:[]\">\r\n    <div class=\"text-line\" style=\"width: 12%;\"></div>\r\n    <div class=\"text-line\" style=\"width: 10%\"></div>\r\n    <div class=\"text-line\" style=\"width: 12%;\"></div>\r\n    <div class=\"text-line\" style=\"width: 5%;\"></div>\r\n  </li>\r\n</ul>\r\n\r\n<!-- Skeleton screen ends -->\r\n\r\n<ul class=\"list-group\" *ngIf=\"!loading\">\r\n  <h2 class=\"list-group-item\">Todo List</h2>\r\n    <li class=\"list-group-item\" *ngFor=\"let task of tasks.payload.todos; let i = index\">\r\n      <div><b>Task Name: </b>{{task.taskName}}</div>\r\n      <div><b>Assigned to/Stduent Id:</b> {{task.assignedTo}}</div>\r\n      <div><b>Task Current Status: </b><span [ngStyle]=\"{'color':task.status === 1 ? 'green' : 'red' }\">{{task.status === 0 ? 'Pending':'Done'}}</span></div>\r\n      <button class=\"btn btn-success\" (click)=\"goToTasks(task)\">Edit</button>\r\n    </li>\r\n    <!-- <li class=\"list-group-item\" *ngFor=\"let task of dammyTasks; let i = index\">\r\n      <div>Task Name: {{task.taskName}}</div>\r\n      <div>Assigned to/Stduent Id: {{task.assigned}}</div>\r\n      <div>Task Current Status: {{task.status}}</div>\r\n      <button class=\"btn btn-success\" (click)=\"goToTasks()\">Edit</button>\r\n    </li> -->\r\n  </ul>"],"sourceRoot":"webpack:///"}